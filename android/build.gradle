def PLUGIN = "flutter_blue";
def ANDROIDX_WARNING = "flutterPluginsAndroidXWarning";
gradle.buildFinished { buildResult ->
    if (buildResult.failure && !rootProject.ext.has(ANDROIDX_WARNING)) {
        println '         *********************************************************'
        println 'WARNING: This version of ' + PLUGIN + ' will break your Android build if it or its dependencies aren\'t compatible with AndroidX.'
        println '         See https://goo.gl/CP92wY for more information on the problem and how to fix it.'
        println '         This warning prints for all Android build failures. The real root cause of the error may be unrelated.'
        println '         *********************************************************'
        rootProject.ext.set(ANDROIDX_WARNING, true);
    }
}

group 'com.pauldemarco.flutter_blue'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        kotlinVersion = '1.4.20'
    }

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.10'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

rootProject.allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.google.protobuf'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    sourceSets {
        main {
            proto {
                srcDir '../protos'
            }
        }
    }
    externalNativeBuild {
//        ndkBuild { path 'src/main/jni/Android.mk' }
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }

    }
    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 28

        ndk {
            abiFilters 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }
    }


}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.9.1'
    }
    plugins {
        javalite {
            // The codegen for lite comes as a separate artifact
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite { }
            }
        }
    }
}

dependencies {
    implementation 'com.google.protobuf:protobuf-lite:3.0.1'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    api 'androidx.core:core:1.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'com.google.oboe:oboe:1.4.3'
}

//mididriver removed. using only fluidsynth.

//task runNdkBuild(type: Exec) {
//    println 'runNdkBuild!'
//    def ndkDir = android.ndkDirectory
//    executable = "$ndkDir/ndk-build"
//    args = ['NDK_PROJECT_PATH=build/intermediates/ndk',
//            'NDK_LIBS_OUT=src/main/jniLibs',
//            'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
//            'NDK_APPLICATION_MK=src/main/jni/Application.mk']
//}
//preBuild.dependsOn runNdkBuild